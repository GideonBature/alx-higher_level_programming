>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> 
>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
[[19, 22], [43, 50]]
>>> matrix_mul([[1, -2], [3, 4]], [[5, 6], [-7, 8]])
[[19, -10], [-13, 50]]
>>> matrix_mul([1, 2], [[5, 6], [7, 8]])            
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 21, in matrix_mul
    raise TypeError("m_a must be a list of lists")
TypeError: m_a must be a list of lists
>>> matrix_mul([[1, 2]], [7, 8])          
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 23, in matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists
>>> matrix_mul([[1, 2], [3, 4]], [5, 6])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 23, in matrix_mul
    raise TypeError("m_b must be a list of lists")
TypeError: m_b must be a list of lists
>>> matrix_mul([], [[], []])            
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 25, in matrix_mul
    raise TypeError("m_a can't be empty")
TypeError: m_a can't be empty
>>> matrix_mul([[], []], [])      
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 27, in matrix_mul
    raise TypeError("m_b can't be empty")
TypeError: m_b can't be empty
>>> matrix_mul([[], []], [[]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 27, in matrix_mul
    raise TypeError("m_b can't be empty")
TypeError: m_b can't be empty
>>> matrix_mul([[]], [[], []])    
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 25, in matrix_mul
    raise TypeError("m_a can't be empty")
TypeError: m_a can't be empty
>>> matrix_mul([[1, 2], [3, '4']], [[5, 6], [7, 8]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 29, in matrix_mul
    raise TypeError("m_a should contain only integers or floats")
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[1, 2], [3, 4]], [[5, '6'], [7, 8]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 31, in matrix_mul
    raise TypeError("m_b should contain only integers or floats")
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[1, 2, 3], [4, 5]], [[5, 6], [7, 8]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 33, in matrix_mul
    raise TypeError("Each row of m_a must be of the same size")
TypeError: Each row of m_a must be of the same size
>>> matrix_mul([[1, 2, 3], [4, 5, 9]], [[5, 6], [7]])   
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 35, in matrix_mul
    raise TypeError("Each row of m_b must be of the same size")
TypeError: Each row of m_b must be of the same size
>>> matrix_mul([[1, 2]], [[3], [4]])                 
[[11, 0]]
>>> matrix_mul([[1, 2]], [[3, 6, 8], [4, 9, 1], [-5, 3, -5]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 37, in matrix_mul
    raise ValueError("m_a and m_b can't be multiplied")
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul(1, 5)                                         
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 17, in matrix_mul
    raise TypeError("m_a must be a list")
TypeError: m_a must be a list
>>> matrix_mul([[1]], 5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/bene/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/100-matrix_mul.py", line 19, in matrix_mul
    raise TypeError("m_b must be a list")
TypeError: m_b must be a list
